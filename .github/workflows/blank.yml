#!/bin/bash

# Function to display the top 10 most used applications by CPU and Memory
function top_apps {
  echo "====================================="
  echo "Top 10 Most Used Applications (CPU & Memory)"
  echo "====================================="
  ps aux --sort=-%cpu | head -n 11 | awk '{print $1, $2, $3, $4, $11}' | column -t
}

# Function to monitor network usage
function network_monitor {
  echo "====================================="
  echo "Network Monitoring"
  echo "====================================="
  echo "Number of concurrent connections:"
  netstat -an | grep ESTABLISHED | wc -l
  echo "Packet drops:"
  netstat -i | awk '{print $1, $3, $4, $5, $6, $7}' | column -t
  echo "Network Traffic (MB in and out):"
  ifconfig | grep -A 1 "RX packets" | awk '{print $1, $5}' | grep "bytes"
}

# Function to display disk usage
function disk_usage {
  echo "====================================="
  echo "Disk Usage by Mounted Partitions"
  echo "====================================="
  df -h | awk '$5 >= 80 {print $0}'
}

# Function to display system load
function system_load {
  echo "====================================="
  echo "System Load"
  echo "====================================="
  uptime
  echo "CPU Usage:"
  mpstat | grep -A 5 "%idle" | awk '{print $3, $4, $5, $6, $12}'
}

# Function to display memory usage
function memory_usage {
  echo "====================================="
  echo "Memory Usage"
  echo "====================================="
  free -m | awk 'NR==1{print $1, $2, $3, $4, $5, $6, $7} NR==2{print $1, $2, $3, $4, $5, $6, $7}'
  echo "Swap Usage:"
  free -m | grep Swap | awk '{print $1, $2, $3, $4}'
}

# Function to monitor active processes
function process_monitor {
  echo "====================================="
  echo "Process Monitoring"
  echo "====================================="
  echo "Number of active processes:"
  ps aux | wc -l
  echo "Top 5 Processes by CPU and Memory Usage:"
  ps aux --sort=-%cpu | head -n 6 | awk '{print $1, $2, $3, $4, $11}' | column -t
}

# Function to monitor essential services
function service_monitor {
  echo "====================================="
  echo "Service Monitoring"
  echo "====================================="
  services=("sshd" "nginx" "apache2" "iptables")
  for service in "${services[@]}"
  do
    if systemctl is-active --quiet "$service"; then
      echo "$service is running"
    else
      echo "$service is not running"
    fi
  done
}

# Display custom dashboard based on command-line switches
case "$1" in
  -cpu) top_apps ;;
  -network) network_monitor ;;
  -disk) disk_usage ;;
  -load) system_load ;;
  -memory) memory_usage ;;
  -process) process_monitor ;;
  -services) service_monitor ;;
  *)
    echo "Usage: $0 {-cpu|-network|-disk|-load|-memory|-process|-services}"
    echo "-cpu: Display top 10 most used applications by CPU and Memory"
    echo "-network: Display network monitoring information"
    echo "-disk: Display disk usage by mounted partitions"
    echo "-load: Display system load and CPU usage breakdown"
    echo "-memory: Display memory usage including swap"
    echo "-process: Display process monitoring information"
    echo "-services: Monitor the status of essential services"
    ;;
esac

# Automatic dashboard refresh every 5 seconds if no argument is provided
if [ -z "$1" ]; then
  while true; do
    clear
    top_apps
    network_monitor
    disk_usage
    system_load
    memory_usage
    process_monitor
    service_monitor
    sleep 5
  done
fi

